graph TD
    classDef default fill:#f0f0f0,stroke:#333,stroke-width:2px;
    classDef process fill:#E6F3FF,stroke:#91C4F2,stroke-width:2px;
    classDef decision fill:#FFF2CC,stroke:#FFD966,stroke-width:2px;
    classDef subagent fill:#E6FFE6,stroke:#82B366,stroke-width:2px;
    classDef input fill:#FFE6E6,stroke:#FF9999,stroke-width:2px;
    classDef human fill:#E6E6FF,stroke:#9999FF,stroke-width:2px;

    H["fa:fa-user Human"]:::human
    A["fa:fa-list Input Data"]:::input
    B["fa:fa-robot Coordinator Agent"]:::process
    C["Dynamic Sharding"]:::process
    D["Create Shard Processing Agents"]:::process
    E{"Parallel Shard Processing"}:::decision
    F1["fa:fa-robot Shard Agent 1"]:::subagent
    F2["fa:fa-robot Shard Agent 2"]:::subagent
    F3["fa:fa-robot Shard Agent 3"]:::subagent
    FN["fa:fa-robot Shard Agent N"]:::subagent
    G["Aggregate Results"]:::process
    I["fa:fa-file-alt Final Response"]:::input

    H -->|"Provides"| A
    A -->|"Data list<br/>Shard size"| B
    B --> C --> D --> E
    E -->|Shard 1| F1
    E -->|Shard 2| F2
    E -->|Shard 3| F3
    E -.-|Shard N| FN
    F1 & F2 & F3 & FN --> G --> I

    subgraph "Shard Processing"
        J["Receive Shard"]:::subagent
        K["Concurrent Item Processing"]:::subagent
        L["Collect Shard Results"]:::subagent
        
        J --> K --> L
    end